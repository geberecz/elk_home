pipeline {
    
    agent any
    
    parameters {
        //string(name: 'VERSION', defaultValue: 'latest', description: 'Input parameter (version of Docker Image), e.g. 1.0.3', trim: false)
        string(name: 'VERSION', defaultValue: '',description: 'Input parameter (version of Docker Image), e.g. 1.0.3', trim: false)

    }

    environment {
    	COMPOSE_FILE='/home/ec2-user/mc_app/mc_stack.yml'
    }

	stages {
	
		stage('Checkout') {
			steps {
				echo "If parameter \"VERSION\" is empty, the deployment fails..."
				//sh 'if [ "${VERSION}" = "" ]; then false;else true;fi'
				sh '[ "${VERSION}" != "" ] || false'
			}
		}

		stage('Deploy to Production') {
			//when { branch "master"}
			steps {
				echo "I am going to update the ${COMPOSE_FILE} file in Production environment..."
				sshPublisher(
					publishers:
						[sshPublisherDesc(
							configName: 'elk1',
							transfers: [
								sshTransfer(
									execCommand: "sed -i -E \"s/(mc:+)([0-9].*)|(latest)/\\1${VERSION}/g\" ${COMPOSE_FILE} && \
									              date >> /tmp/status.txt && grep \"mc:${VERSION}\" ${COMPOSE_FILE} >> /tmp/status.txt"
								)	
							])
						]
				)
			}
		}
	}

	post {
		always {
			echo 'I am always cleaning the Workspace with cleanWs...'
			cleanWs()
		}
		failure {
			echo "Deployment ended with error..."
		}
		success {
			echo "Deployment ended successfully..."
		}
	}
}